function toggleControl(element) {
                    for(key in drawControls) {
                        var control = drawControls[key];
                        if(element.value == key && element.checked) {
                            control.activate();
                        } else {
                            control.deactivate();
                        }
                    }   
                }

function allowPan(element) {
    var stop = !element.checked;
    for(var key in drawControls) {
        drawControls[key].handler.stopDown = stop;
        drawControls[key].handler.stopUp = stop;
    }
}

function drawPolygon() {
    for(key in drawControls) {
        element = this;
        var control = drawControls[key];
        if("polygon" == key && element.pressed) {
            control.activate();
        } else {
            control.deactivate();
        }
    }
}

function removePolygon(){
    var control = map.getControl("OpenLayers_Control_DrawFeature_28");
    control.layer.removeAllFeatures();
    control.layer.redraw();
}     

function sendTreatmentPolygons() {
    var geojson = new OpenLayers.Format.GeoJSON
    var control = map.getControl("OpenLayers_Control_DrawFeature_28");
    polygonsjson = geojson.write(control.layer.getFeaturesByAttribute());
    
    Ext.Ajax.request({
        url : '../../map/selecttreatment',
        method : 'POST',
        jsonData : polygonsjson,
        success : function(response) {
            console.log(mexico.redraw(true));
        },
        failure : function() {
            console.log('Failed to send geojson to server');
        }
    });
}

function clearTreatmentPolygons() {
    Ext.Ajax.request({
        url : '../../map/clear/treatment',
        method : 'GET',
        success : function(response) {
            console.log(mexico.redraw(true));
        },
        failure : function() {
            console.log('Failed to request to server');
        }
    });
}

Ext.define('Evaluator.view.SelectPolicyAreas', {
	extend : 'Ext.panel.Panel',
	alias : 'widget.selectpolicyareas',
	collapsible : true,
    collapsed : true,
    listeners : {
        beforecollapse : function() {
           var drawButton = Ext.ComponentQuery.query("button[text='Draw Polygons']")[0];
           drawButton.toggle(false);
           drawControls["polygon"].deactivate();
           removePolygon();
        }
    },

	// tpl: '<h1>About {artist}</h1><p>{description}</p>',
    
	initComponent : function() {
		/*
		 * this.dockedItems = [{ xtype: 'container', layout: { type: 'hbox',
		 * align: 'middle', pack: 'end' }, height: 100, items: [{ xtype:
		 * 'component', width: 200, itemId: 'songdescription', tpl: '<h2>{artist}</h2><h1>{name}</h1><h2>{album}</h2>' }, {
		 * xtype: 'button', text: 'menu', action: 'song-menu' }] }];
		 */
		this.dockedItems = [{
					xtype : 'fieldset',
					title : 'Option 1: Upload a Shapefile',
					layout : 'anchor',
					frame : 'true',
					margin : '5 5 10 5',
					items : [{
								xtype : 'textfield',
								name : 'File Name',
								fieldLable : 'File Name'
							}, {
								xtype : 'button',
								text : 'Browse'
							}, {
								xtype : 'button',
								text : 'Upload'
							}]
				}, {
					xtype : 'fieldset',
					title : 'Option 2: Manual Selection',
					layout : 'anchor',
					frame : 'true',
					margin : '5 5 10 5',
					items : [{
								xtype : 'button',
								text : 'Draw Polygons',
								enableToggle : true,
								handler: drawPolygon
							},{
    							xtype : 'button',
    							text : 'Clear Polygons',
    							handler: removePolygon
							},{
    							xtype : 'button',
    							text : 'Select Treatment Areas by Polygon',
    							handler: sendTreatmentPolygons
							},{
    							xtype : 'button',
    							text : 'Clear Treatment Area Selection',
    							handler: clearTreatmentPolygons
							}]
				}, {
					xtype : 'fieldset',
					title : 'Option 3: Select PA Tool',
					layout : 'anchor',
					frame : 'true',
					margin : '5 5 10 5',
					items : [{
						xtype : 'button',
						text : 'Select Protected Areas',
						handler : function() {
							Ext.Ajax.disableCaching = false;
							Ext.Ajax.request({
										url : '../../cgi-bin/R/demo?q=selecttreatment',
										timeout : 120000,
										success : function() {
											mexico.redraw(true);
										}
									});
						}
					}]
				}];
		this.callParent();
	}

		/*
	 * update: function(record) { var data = record ? record.data : {};
	 * this.down('#songdescription').update(data); this.callParent([data]); }
	 */
});
